{"ast":null,"code":"var _jsxFileName = \"/Users/carsonmoore/Downloads/summer24/cs3750/CS-3750-Hangman/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { Route, Routes } from \"react-router-dom\";\nimport React, { useState } from 'react';\nimport './styles.css';\nimport Highscore from './Highscores';\nimport RecordList from \"./components/recordList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst words = [\"react\", \"hangman\", \"javascript\", \"frontend\"];\nconst getRandomWord = () => {\n  return words[Math.floor(Math.random() * words.length)];\n};\nconst App = () => {\n  _s();\n  const [word, setWord] = useState(getRandomWord());\n  const [guessedLetters, setGuessedLetters] = useState([]);\n  const [wrongGuesses, setWrongGuesses] = useState(0);\n  const [showHighscore, setShowHighscore] = useState(false);\n  const maxWrongGuesses = 6;\n  useEffect(() => {\n    const handleKeyPress = event => {\n      const letter = event.key.toLowerCase();\n      if (/^[a-z]$/.test(letter)) {\n        handleGuess(letter);\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => {\n      window.removeEventListener('keydown', handleKeyPress);\n    };\n  }, [guessedLetters, wrongGuesses, word]);\n  const handleGuess = letter => {\n    if (guessedLetters.includes(letter)) return;\n    setGuessedLetters([...guessedLetters, letter]);\n    if (!word.includes(letter)) {\n      setWrongGuesses(wrongGuesses + 1);\n    }\n  };\n  const handleReset = () => {\n    setWord(getRandomWord());\n    setGuessedLetters([]);\n    setWrongGuesses(0);\n    setShowHighscore(false);\n  };\n  const renderWord = () => {\n    return word.split('').map((letter, index) => guessedLetters.includes(letter) ? letter : '_').join(' ');\n  };\n  const renderAlphabetButtons = () => {\n    const alphabet = 'abcdefghijklmnopqrstuvwxyz';\n    return alphabet.split('').map(letter => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleGuess(letter),\n      disabled: guessedLetters.includes(letter) || wrongGuesses >= maxWrongGuesses,\n      children: letter\n    }, letter, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this));\n  };\n  const isGameOver = wrongGuesses >= maxWrongGuesses;\n  const isGameWon = word.split('').every(letter => guessedLetters.includes(letter));\n  if (isGameWon) {\n    setTimeout(() => {\n      setShowHighscore(true);\n    }, 2000);\n  }\n  if (showHighscore) {\n    return /*#__PURE__*/_jsxDEV(Highscore, {\n      onReset: handleReset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hangman Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Word: \", renderWord()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Wrong guesses: \", wrongGuesses]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: renderAlphabetButtons()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), isGameOver && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Game Over! The word was: \", word]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 22\n    }, this), isGameWon && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Congratulations! You've guessed the word!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReset,\n      children: \"Reset Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), isGameOver && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowHighscore(true),\n      children: \"Go to Highscore\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"0Rd6b+pK0P6z2Gew7fr5l/vsJD8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Route","Routes","React","useState","Highscore","RecordList","jsxDEV","_jsxDEV","words","getRandomWord","Math","floor","random","length","App","_s","word","setWord","guessedLetters","setGuessedLetters","wrongGuesses","setWrongGuesses","showHighscore","setShowHighscore","maxWrongGuesses","useEffect","handleKeyPress","event","letter","key","toLowerCase","test","handleGuess","window","addEventListener","removeEventListener","includes","handleReset","renderWord","split","map","index","join","renderAlphabetButtons","alphabet","onClick","disabled","children","fileName","_jsxFileName","lineNumber","columnNumber","isGameOver","isGameWon","every","setTimeout","onReset","className","_c","$RefreshReg$"],"sources":["/Users/carsonmoore/Downloads/summer24/cs3750/CS-3750-Hangman/frontend/src/App.js"],"sourcesContent":["import { Route, Routes } from \"react-router-dom\";\nimport React, { useState } from 'react';\nimport './styles.css';\nimport Highscore from './Highscores';\nimport RecordList from \"./components/recordList\";\n\n\nconst words = [\"react\", \"hangman\", \"javascript\", \"frontend\"];\n\nconst getRandomWord = () => {\n  return words[Math.floor(Math.random() * words.length)];\n};\n\nconst App = () => {\n  const [word, setWord] = useState(getRandomWord());\n  const [guessedLetters, setGuessedLetters] = useState([]);\n  const [wrongGuesses, setWrongGuesses] = useState(0);\n  const [showHighscore, setShowHighscore] = useState(false);\n  const maxWrongGuesses = 6;\n\n  useEffect(() => {\n    const handleKeyPress = (event) => {\n      const letter = event.key.toLowerCase();\n      if (/^[a-z]$/.test(letter)) {\n        handleGuess(letter);\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyPress);\n    };\n  }, [guessedLetters, wrongGuesses, word]);\n  const handleGuess = (letter) => {\n    if (guessedLetters.includes(letter)) return;\n\n    setGuessedLetters([...guessedLetters, letter]);\n\n    if (!word.includes(letter)) {\n      setWrongGuesses(wrongGuesses + 1);\n    }\n  };\n\n  const handleReset = () => {\n    setWord(getRandomWord());\n    setGuessedLetters([]);\n    setWrongGuesses(0);\n    setShowHighscore(false);\n  };\n\n  const renderWord = () => {\n    return word.split('').map((letter, index) => (\n      guessedLetters.includes(letter) ? letter : '_'\n    )).join(' ');\n  };\n\n  const renderAlphabetButtons = () => {\n    const alphabet = 'abcdefghijklmnopqrstuvwxyz';\n    return alphabet.split('').map((letter) => (\n      <button\n        key={letter}\n        onClick={() => handleGuess(letter)}\n        disabled={guessedLetters.includes(letter) || wrongGuesses >= maxWrongGuesses}\n      >\n        {letter}\n      </button>\n    ));\n  };\n\n  const isGameOver = wrongGuesses >= maxWrongGuesses;\n  const isGameWon = word.split('').every(letter => guessedLetters.includes(letter));\n\n  if (isGameWon) {\n    setTimeout(() => {\n      setShowHighscore(true);\n    }, 2000);\n  }\n\n  if (showHighscore) {\n    return <Highscore onReset={handleReset} />;\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Hangman Game</h1>\n      <p>Word: {renderWord()}</p>\n      <p>Wrong guesses: {wrongGuesses}</p>\n      <div>{renderAlphabetButtons()}</div>\n      {isGameOver && <p>Game Over! The word was: {word}</p>}\n      {isGameWon && <p>Congratulations! You've guessed the word!</p>}\n      <button onClick={handleReset}>Reset Game</button>\n      {isGameOver && <button onClick={() => setShowHighscore(true)}>Go to Highscore</button>}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAChD,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,cAAc;AACrB,OAAOC,SAAS,MAAM,cAAc;AACpC,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjD,MAAMC,KAAK,GAAG,CAAC,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,UAAU,CAAC;AAE5D,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC1B,OAAOD,KAAK,CAACE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGJ,KAAK,CAACK,MAAM,CAAC,CAAC;AACxD,CAAC;AAED,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAACM,aAAa,CAAC,CAAC,CAAC;EACjD,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACmB,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAMqB,eAAe,GAAG,CAAC;EAEzBC,SAAS,CAAC,MAAM;IACd,MAAMC,cAAc,GAAIC,KAAK,IAAK;MAChC,MAAMC,MAAM,GAAGD,KAAK,CAACE,GAAG,CAACC,WAAW,CAAC,CAAC;MACtC,IAAI,SAAS,CAACC,IAAI,CAACH,MAAM,CAAC,EAAE;QAC1BI,WAAW,CAACJ,MAAM,CAAC;MACrB;IACF,CAAC;IAEDK,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAER,cAAc,CAAC;IAElD,OAAO,MAAM;MACXO,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAET,cAAc,CAAC;IACvD,CAAC;EACH,CAAC,EAAE,CAACR,cAAc,EAAEE,YAAY,EAAEJ,IAAI,CAAC,CAAC;EACxC,MAAMgB,WAAW,GAAIJ,MAAM,IAAK;IAC9B,IAAIV,cAAc,CAACkB,QAAQ,CAACR,MAAM,CAAC,EAAE;IAErCT,iBAAiB,CAAC,CAAC,GAAGD,cAAc,EAAEU,MAAM,CAAC,CAAC;IAE9C,IAAI,CAACZ,IAAI,CAACoB,QAAQ,CAACR,MAAM,CAAC,EAAE;MAC1BP,eAAe,CAACD,YAAY,GAAG,CAAC,CAAC;IACnC;EACF,CAAC;EAED,MAAMiB,WAAW,GAAGA,CAAA,KAAM;IACxBpB,OAAO,CAACR,aAAa,CAAC,CAAC,CAAC;IACxBU,iBAAiB,CAAC,EAAE,CAAC;IACrBE,eAAe,CAAC,CAAC,CAAC;IAClBE,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMe,UAAU,GAAGA,CAAA,KAAM;IACvB,OAAOtB,IAAI,CAACuB,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAAC,CAACZ,MAAM,EAAEa,KAAK,KACtCvB,cAAc,CAACkB,QAAQ,CAACR,MAAM,CAAC,GAAGA,MAAM,GAAG,GAC5C,CAAC,CAACc,IAAI,CAAC,GAAG,CAAC;EACd,CAAC;EAED,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;IAClC,MAAMC,QAAQ,GAAG,4BAA4B;IAC7C,OAAOA,QAAQ,CAACL,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAAEZ,MAAM,iBACnCrB,OAAA;MAEEsC,OAAO,EAAEA,CAAA,KAAMb,WAAW,CAACJ,MAAM,CAAE;MACnCkB,QAAQ,EAAE5B,cAAc,CAACkB,QAAQ,CAACR,MAAM,CAAC,IAAIR,YAAY,IAAII,eAAgB;MAAAuB,QAAA,EAE5EnB;IAAM,GAJFA,MAAM;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKL,CACT,CAAC;EACJ,CAAC;EAED,MAAMC,UAAU,GAAGhC,YAAY,IAAII,eAAe;EAClD,MAAM6B,SAAS,GAAGrC,IAAI,CAACuB,KAAK,CAAC,EAAE,CAAC,CAACe,KAAK,CAAC1B,MAAM,IAAIV,cAAc,CAACkB,QAAQ,CAACR,MAAM,CAAC,CAAC;EAEjF,IAAIyB,SAAS,EAAE;IACbE,UAAU,CAAC,MAAM;MACfhC,gBAAgB,CAAC,IAAI,CAAC;IACxB,CAAC,EAAE,IAAI,CAAC;EACV;EAEA,IAAID,aAAa,EAAE;IACjB,oBAAOf,OAAA,CAACH,SAAS;MAACoD,OAAO,EAAEnB;IAAY;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC5C;EAEA,oBACE5C,OAAA;IAAKkD,SAAS,EAAC,KAAK;IAAAV,QAAA,gBAClBxC,OAAA;MAAAwC,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrB5C,OAAA;MAAAwC,QAAA,GAAG,QAAM,EAACT,UAAU,CAAC,CAAC;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3B5C,OAAA;MAAAwC,QAAA,GAAG,iBAAe,EAAC3B,YAAY;IAAA;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpC5C,OAAA;MAAAwC,QAAA,EAAMJ,qBAAqB,CAAC;IAAC;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACnCC,UAAU,iBAAI7C,OAAA;MAAAwC,QAAA,GAAG,2BAAyB,EAAC/B,IAAI;IAAA;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpDE,SAAS,iBAAI9C,OAAA;MAAAwC,QAAA,EAAG;IAAyC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC9D5C,OAAA;MAAQsC,OAAO,EAAER,WAAY;MAAAU,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAChDC,UAAU,iBAAI7C,OAAA;MAAQsC,OAAO,EAAEA,CAAA,KAAMtB,gBAAgB,CAAC,IAAI,CAAE;MAAAwB,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnF,CAAC;AAEV,CAAC;AAACpC,EAAA,CAlFID,GAAG;AAAA4C,EAAA,GAAH5C,GAAG;AAoFT,eAAeA,GAAG;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}