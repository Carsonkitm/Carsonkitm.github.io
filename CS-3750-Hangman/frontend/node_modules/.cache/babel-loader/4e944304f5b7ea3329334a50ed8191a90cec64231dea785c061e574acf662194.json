{"ast":null,"code":"var _jsxFileName = \"/Users/carsonmoore/Downloads/summer24/cs3750/CS-3750-Hangman/frontend/src/App.js\",\n  _s = $RefreshSig$();\n/*import React from \"react\";\n \n// We use Route in order to define the different routes of our application\n \n// We import all the components we need in our app\n\n\n \nconst App = () => {\n return (\n   <div>\n    <h1>Hello World</h1>\n     <Routes>\n       <Route exact path=\"/\" element={<RecordList />} />\n     </Routes>\n   </div>\n );\n};\n \nexport default App;*/\n\nimport React, { useState } from 'react';\nimport './styles.css';\nimport { Route, Routes } from \"react-router-dom\";\nimport Highscore from './Highscores';\nimport RecordList from \"/recordList\";\nimport Edit from \"./components/edit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst words = [\"react\", \"hangman\", \"javascript\", \"frontend\"];\nconst getRandomWord = () => {\n  return words[Math.floor(Math.random() * words.length)];\n};\nconst App = () => {\n  _s();\n  const [word, setWord] = useState(getRandomWord());\n  const [guessedLetters, setGuessedLetters] = useState([]);\n  const [wrongGuesses, setWrongGuesses] = useState(0);\n  const [showHighscore, setShowHighscore] = useState(false);\n  const maxWrongGuesses = 6;\n  const handleGuess = letter => {\n    if (guessedLetters.includes(letter)) return;\n    setGuessedLetters([...guessedLetters, letter]);\n    if (!word.includes(letter)) {\n      setWrongGuesses(wrongGuesses + 1);\n    }\n  };\n  const handleReset = () => {\n    setWord(getRandomWord());\n    setGuessedLetters([]);\n    setWrongGuesses(0);\n    setShowHighscore(false);\n  };\n  const renderWord = () => {\n    return word.split('').map((letter, index) => guessedLetters.includes(letter) ? letter : '_').join(' ');\n  };\n  const renderAlphabetButtons = () => {\n    const alphabet = 'abcdefghijklmnopqrstuvwxyz';\n    return alphabet.split('').map(letter => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleGuess(letter),\n      disabled: guessedLetters.includes(letter) || wrongGuesses >= maxWrongGuesses,\n      children: letter\n    }, letter, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this));\n  };\n  const isGameOver = wrongGuesses >= maxWrongGuesses;\n  const isGameWon = word.split('').every(letter => guessedLetters.includes(letter));\n  if (isGameWon) {\n    setTimeout(() => {\n      setShowHighscore(true);\n    }, 2000);\n  }\n  if (showHighscore) {\n    return /*#__PURE__*/_jsxDEV(Highscore, {\n      onReset: handleReset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hangman Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Word: \", renderWord()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Wrong guesses: \", wrongGuesses]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: renderAlphabetButtons()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), isGameOver && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Game Over! The word was: \", word]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 22\n    }, this), isGameWon && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Congratulations! You've guessed the word!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReset,\n      children: \"Reset Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), isGameOver && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowHighscore(true),\n      children: \"Go to Highscore\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"5VBw5HEZG/ZrgxHdqmiWJZ9S15U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Route","Routes","Highscore","RecordList","Edit","jsxDEV","_jsxDEV","words","getRandomWord","Math","floor","random","length","App","_s","word","setWord","guessedLetters","setGuessedLetters","wrongGuesses","setWrongGuesses","showHighscore","setShowHighscore","maxWrongGuesses","handleGuess","letter","includes","handleReset","renderWord","split","map","index","join","renderAlphabetButtons","alphabet","onClick","disabled","children","fileName","_jsxFileName","lineNumber","columnNumber","isGameOver","isGameWon","every","setTimeout","onReset","className","_c","$RefreshReg$"],"sources":["/Users/carsonmoore/Downloads/summer24/cs3750/CS-3750-Hangman/frontend/src/App.js"],"sourcesContent":["/*import React from \"react\";\n \n// We use Route in order to define the different routes of our application\n \n// We import all the components we need in our app\n\n\n \nconst App = () => {\n return (\n   <div>\n    <h1>Hello World</h1>\n     <Routes>\n       <Route exact path=\"/\" element={<RecordList />} />\n     </Routes>\n   </div>\n );\n};\n \nexport default App;*/\n\nimport React, { useState } from 'react';\nimport './styles.css';\nimport { Route, Routes } from \"react-router-dom\";\n\nimport Highscore from './Highscores';\nimport RecordList from \"/recordList\";\nimport Edit from \"./components/edit\";\n\nconst words = [\"react\", \"hangman\", \"javascript\", \"frontend\"];\n\nconst getRandomWord = () => {\n  return words[Math.floor(Math.random() * words.length)];\n};\n\nconst App = () => {\n  const [word, setWord] = useState(getRandomWord());\n  const [guessedLetters, setGuessedLetters] = useState([]);\n  const [wrongGuesses, setWrongGuesses] = useState(0);\n  const [showHighscore, setShowHighscore] = useState(false);\n  const maxWrongGuesses = 6;\n\n  const handleGuess = (letter) => {\n    if (guessedLetters.includes(letter)) return;\n\n    setGuessedLetters([...guessedLetters, letter]);\n\n    if (!word.includes(letter)) {\n      setWrongGuesses(wrongGuesses + 1);\n    }\n  };\n\n  const handleReset = () => {\n    setWord(getRandomWord());\n    setGuessedLetters([]);\n    setWrongGuesses(0);\n    setShowHighscore(false);\n  };\n\n  const renderWord = () => {\n    return word.split('').map((letter, index) => (\n      guessedLetters.includes(letter) ? letter : '_'\n    )).join(' ');\n  };\n\n  const renderAlphabetButtons = () => {\n    const alphabet = 'abcdefghijklmnopqrstuvwxyz';\n    return alphabet.split('').map((letter) => (\n      <button\n        key={letter}\n        onClick={() => handleGuess(letter)}\n        disabled={guessedLetters.includes(letter) || wrongGuesses >= maxWrongGuesses}\n      >\n        {letter}\n      </button>\n    ));\n  };\n\n  const isGameOver = wrongGuesses >= maxWrongGuesses;\n  const isGameWon = word.split('').every(letter => guessedLetters.includes(letter));\n\n  if (isGameWon) {\n    setTimeout(() => {\n      setShowHighscore(true);\n    }, 2000);\n  }\n\n  if (showHighscore) {\n    return <Highscore onReset={handleReset} />;\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Hangman Game</h1>\n      <p>Word: {renderWord()}</p>\n      <p>Wrong guesses: {wrongGuesses}</p>\n      <div>{renderAlphabetButtons()}</div>\n      {isGameOver && <p>Game Over! The word was: {word}</p>}\n      {isGameWon && <p>Congratulations! You've guessed the word!</p>}\n      <button onClick={handleReset}>Reset Game</button>\n      {isGameOver && <button onClick={() => setShowHighscore(true)}>Go to Highscore</button>}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}