{"ast":null,"code":"var _jsxFileName = \"/Users/carsonmoore/Downloads/summer24/cs3750/CS-3750-Hangman/frontend/src/components/session_set.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\n\n// this is the starting page which will ask for a name before starting the game\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Session_Set() {\n  _s();\n  const [status, setStatus] = useState(\"\");\n  useEffect(() => {\n    async function run() {\n      const response = await fetch(`http://localhost:4000/session_set`, {\n        method: \"GET\",\n        credentials: \"include\"\n      });\n      if (!response.ok) {\n        const message = `An error occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const statusResponse = await response.json();\n      setStatus(statusResponse.status);\n    }\n    run();\n    return;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 14\n  }, this);\n}\n\n// I was meaning to set both the session set for the name of the player and\n// enter the name of the player in the same file.\n\n// export default function Create() {\n//     const [form, setForm] = useState({\n//         first: \"\",\n//         last: \"\",\n//     });\n\n// const navigate = useNavigate();\n\n// function updateForm(jsonObj) {\n//     return setForm((prevJsonObj) => {\n//         return { ...prevJsonObj, ...jsonObj};\n//     });\n// }\n\n// async function onSubmit(e) {\n//     e.preventDefault();\n//     const currplayer = {...form};\n//     }\n//     await fetch(`http://localhost:4000/data/`, {\n//         method: \"PUT\",\n//         headers: {\n//             \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify(currplayer),\n//     })\n//     .catch(error => {\n//         window.alert(error);\n//         return;\n//     })\n//     navigate(\"/\");\n// }\n\n// return (\n//     <div>\n//         <h3>Please Enter Your Name!</h3>\n//         <form onSubmit={onSubmit}>\n//             <div>\n//                 <label>First: </label>\n//                 <input\n//                     type=\"text\"\n//                     id=\"first\"\n//                     value={form.first}\n//                     onChange={(e) => updateForm({ first: e.target.value })}\n//                 />\n//             </div>\n//             <div>\n//                 <label>Last: </label>\n//                 <input\n//                     type=\"text\"\n//                     id=\"last\"\n//                     value={form.last}\n//                     onChange={(e) => updateForm({ last: e.target.value })}\n//                 />\n//             </div>\n//             <div> \n//                 <p>{status}</p>\n//             </div>\n//             <br/>\n//             <div>\n//                 <input\n//                     type=\"submit\"\n//                     value=\"Register\"\n//                 />\n//             </div>\n//         </form>\n//     </div>\n// )\n_s(Session_Set, \"GiwAWfb3KKCKtX1ip/JboftwoBw=\");\n_c = Session_Set;\nvar _c;\n$RefreshReg$(_c, \"Session_Set\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Session_Set","_s","status","setStatus","run","response","fetch","method","credentials","ok","message","statusText","window","alert","statusResponse","json","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/carsonmoore/Downloads/summer24/cs3750/CS-3750-Hangman/frontend/src/components/session_set.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\n// this is the starting page which will ask for a name before starting the game\n\nexport default function Session_Set() {\n    const [status, setStatus] = useState(\"\");\n\n    useEffect(() => {\n        async function run() {\n            const response = await fetch(`http://localhost:4000/session_set`,\n                {\n                    method: \"GET\",\n                    credentials: \"include\"\n                }\n            );\n            if (!response.ok) {\n                const message = `An error occurred: ${response.statusText}`;\n                window.alert(message);\n                return;\n            }\n            const statusResponse = await response.json();\n            setStatus(statusResponse.status);\n        }\n        run();\n        return;\n    },[]);\n\n    return (\n             <div>\n                <p>{status}</p>\n             </div>\n    );\n}\n\n// I was meaning to set both the session set for the name of the player and\n// enter the name of the player in the same file.\n\n// export default function Create() {\n//     const [form, setForm] = useState({\n//         first: \"\",\n//         last: \"\",\n//     });\n\n// const navigate = useNavigate();\n\n// function updateForm(jsonObj) {\n//     return setForm((prevJsonObj) => {\n//         return { ...prevJsonObj, ...jsonObj};\n//     });\n// }\n\n// async function onSubmit(e) {\n//     e.preventDefault();\n//     const currplayer = {...form};\n//     }\n//     await fetch(`http://localhost:4000/data/`, {\n//         method: \"PUT\",\n//         headers: {\n//             \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify(currplayer),\n//     })\n//     .catch(error => {\n//         window.alert(error);\n//         return;\n//     })\n//     navigate(\"/\");\n// }\n\n// return (\n//     <div>\n//         <h3>Please Enter Your Name!</h3>\n//         <form onSubmit={onSubmit}>\n//             <div>\n//                 <label>First: </label>\n//                 <input\n//                     type=\"text\"\n//                     id=\"first\"\n//                     value={form.first}\n//                     onChange={(e) => updateForm({ first: e.target.value })}\n//                 />\n//             </div>\n//             <div>\n//                 <label>Last: </label>\n//                 <input\n//                     type=\"text\"\n//                     id=\"last\"\n//                     value={form.last}\n//                     onChange={(e) => updateForm({ last: e.target.value })}\n//                 />\n//             </div>\n//             <div> \n//                 <p>{status}</p>\n//             </div>\n//             <br/>\n//             <div>\n//                 <input\n//                     type=\"submit\"\n//                     value=\"Register\"\n//                 />\n//             </div>\n//         </form>\n//     </div>\n// )"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAElD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ,eAAeQ,GAAGA,CAAA,EAAG;MACjB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAC5D;QACIC,MAAM,EAAE,KAAK;QACbC,WAAW,EAAE;MACjB,CACJ,CAAC;MACD,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;QACd,MAAMC,OAAO,GAAG,sBAAsBL,QAAQ,CAACM,UAAU,EAAE;QAC3DC,MAAM,CAACC,KAAK,CAACH,OAAO,CAAC;QACrB;MACJ;MACA,MAAMI,cAAc,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAC5CZ,SAAS,CAACW,cAAc,CAACZ,MAAM,CAAC;IACpC;IACAE,GAAG,CAAC,CAAC;IACL;EACJ,CAAC,EAAC,EAAE,CAAC;EAEL,oBACSL,OAAA;IAAAiB,QAAA,eACGjB,OAAA;MAAAiB,QAAA,EAAId;IAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEnB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAnB,EAAA,CAnGwBD,WAAW;AAAAqB,EAAA,GAAXrB,WAAW;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}